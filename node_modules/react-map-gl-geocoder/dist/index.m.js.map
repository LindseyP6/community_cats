{"version":3,"file":"index.m.js","sources":["../src/index.js"],"sourcesContent":["import { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\nimport { FlyToInterpolator } from 'react-map-gl'\nimport WebMercatorViewport from 'viewport-mercator-project'\n\nconst VALID_POSITIONS = ['top-left', 'top-right', 'bottom-left', 'bottom-right']\n\nclass Geocoder extends PureComponent {\n  geocoder = null\n  cachedResult = null\n\n  componentDidMount() {\n    this.initializeGeocoder()\n  }\n\n  componentWillUnmount() {\n    this.removeGeocoder()\n  }\n\n  componentDidUpdate() {\n    this.removeGeocoder()\n    this.initializeGeocoder()\n  }\n\n  initializeGeocoder = () => {\n    const mapboxMap = this.getMapboxMap()\n    const containerNode = this.getContainerNode()\n    const {\n      mapboxApiAccessToken,\n      inputValue,\n      origin,\n      zoom,\n      placeholder,\n      proximity,\n      trackProximity,\n      collapsed,\n      clearAndBlurOnEsc,\n      clearOnBlur,\n      bbox,\n      types,\n      countries,\n      minLength,\n      limit,\n      language,\n      filter,\n      localGeocoder,\n      reverseGeocode,\n      enableEventLogging,\n      render,\n      getItemValue,\n      onInit,\n      position\n    } = this.props\n    const options = {\n      accessToken: mapboxApiAccessToken,\n      origin,\n      zoom,\n      flyTo: false,\n      placeholder,\n      proximity,\n      trackProximity,\n      collapsed,\n      clearAndBlurOnEsc,\n      clearOnBlur,\n      bbox,\n      types,\n      countries,\n      minLength,\n      limit,\n      language,\n      filter,\n      localGeocoder,\n      reverseGeocode,\n      enableEventLogging,\n      marker: false\n    }\n\n    if (render && typeof render === 'function') {\n      options.render = render\n    }\n\n    if (getItemValue && typeof getItemValue === 'function') {\n      options.getItemValue = getItemValue\n    }\n\n    this.geocoder = new MapboxGeocoder(options)\n    this.subscribeEvents()\n\n    if (containerNode) {\n      containerNode.appendChild(this.geocoder.onAdd(mapboxMap))\n    } else {\n      mapboxMap.addControl(this.geocoder, VALID_POSITIONS.find((_position) => position === _position))\n    }\n\n    if (inputValue !== undefined && inputValue !== null) {\n      this.geocoder.setInput(inputValue)\n    } else if (this.cachedResult) {\n      this.geocoder.setInput(this.cachedResult.place_name)\n    }\n\n    if (this.cachedResult || (inputValue !== undefined && inputValue !== null)) {\n      this.showClearIcon()\n    }\n\n    onInit(this.geocoder)\n  }\n\n  showClearIcon = () => {\n    // this is a hack to force clear icon to show if there is text in the input\n    this.geocoder._clearEl.style.display = 'block'\n  }\n\n  getMapboxMap = () => {\n    const { mapRef } = this.props\n\n    return (mapRef && mapRef.current && mapRef.current.getMap()) || null\n  }\n\n  getContainerNode = () => {\n    const { containerRef } = this.props\n\n    return (containerRef && containerRef.current) || null\n  }\n\n  subscribeEvents = () => {\n    this.geocoder.on('clear', this.handleClear)\n    this.geocoder.on('loading', this.handleLoading)\n    this.geocoder.on('results', this.handleResults)\n    this.geocoder.on('result', this.handleResult)\n    this.geocoder.on('error', this.handleError)\n  }\n\n  unsubscribeEvents = () => {\n    this.geocoder.off('clear', this.handleClear)\n    this.geocoder.off('loading', this.handleLoading)\n    this.geocoder.off('results', this.handleResults)\n    this.geocoder.off('result', this.handleResult)\n    this.geocoder.off('error', this.handleError)\n  }\n\n  removeGeocoder = () => {\n    const mapboxMap = this.getMapboxMap()\n\n    this.unsubscribeEvents()\n\n    if (mapboxMap && mapboxMap.removeControl) {\n      this.getMapboxMap().removeControl(this.geocoder)\n    }\n\n    this.geocoder = null\n  }\n\n  handleClear = () => {\n    this.cachedResult = null\n    this.props.onClear()\n  }\n\n  handleLoading = (event) => {\n    this.props.onLoading(event)\n  }\n\n  handleResults = (event) => {\n    this.props.onResults(event)\n  }\n\n  handleResult = (event) => {\n    const { result } = event\n    const { onViewportChange, onResult } = this.props\n    const { bbox, center, properties = {} } = result\n    const { short_code } = properties\n    const [longitude, latitude] = center\n    const bboxExceptions = {\n      fr: {\n        name: 'France',\n        bbox: [[-4.59235, 41.380007], [9.560016, 51.148506]]\n      },\n      us: {\n        name: 'United States',\n        bbox: [[-171.791111, 18.91619], [-66.96466, 71.357764]]\n      },\n      ru: {\n        name: 'Russia',\n        bbox: [[19.66064, 41.151416], [190.10042, 81.2504]]\n      },\n      ca: {\n        name: 'Canada',\n        bbox: [[-140.99778, 41.675105], [-52.648099, 83.23324]]\n      }\n    }\n    const { width, height } = this.getMapboxMap()\n      .getContainer()\n      .getBoundingClientRect()\n    let zoom = this.geocoder.options.zoom\n    const fitBounds = (bounds, viewport) => new WebMercatorViewport(viewport).fitBounds(bounds)\n\n    try {\n      if (!bboxExceptions[short_code] && bbox) {\n        zoom = fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], { width, height }).zoom\n      } else if (bboxExceptions[short_code]) {\n        zoom = fitBounds(bboxExceptions[short_code].bbox, { width, height }).zoom\n      }\n    } catch (e) {\n      console.warn('following result caused an error when trying to zoom to bbox: ', result) // eslint-disable-line\n      zoom = this.geocoder.options.zoom\n    }\n\n    onViewportChange({\n      longitude,\n      latitude,\n      zoom,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionDuration: 3000\n    })\n    onResult(event)\n\n    this.cachedResult = result\n    this.geocoder._typeahead.selected = null\n    this.showClearIcon()\n  }\n\n  handleError = (event) => {\n    this.props.onError(event)\n  }\n\n  getGeocoder() {\n    return this.geocoder\n  }\n\n  render() {\n    return null\n  }\n\n  static propTypes = {\n    mapRef: PropTypes.object.isRequired,\n    containerRef: PropTypes.object,\n    onViewportChange: PropTypes.func,\n    mapboxApiAccessToken: PropTypes.string.isRequired,\n    inputValue: PropTypes.string,\n    origin: PropTypes.string,\n    zoom: PropTypes.number,\n    placeholder: PropTypes.string,\n    proximity: PropTypes.object,\n    trackProximity: PropTypes.bool,\n    collapsed: PropTypes.bool,\n    clearAndBlurOnEsc: PropTypes.bool,\n    clearOnBlur: PropTypes.bool,\n    bbox: PropTypes.array,\n    types: PropTypes.string,\n    countries: PropTypes.string,\n    minLength: PropTypes.number,\n    limit: PropTypes.number,\n    language: PropTypes.string,\n    filter: PropTypes.func,\n    localGeocoder: PropTypes.func,\n    reverseGeocode: PropTypes.bool,\n    enableEventLogging: PropTypes.bool,\n    render: PropTypes.func,\n    getItemValue: PropTypes.func,\n    position: PropTypes.oneOf(VALID_POSITIONS),\n    onInit: PropTypes.func,\n    onClear: PropTypes.func,\n    onLoading: PropTypes.func,\n    onResults: PropTypes.func,\n    onResult: PropTypes.func,\n    onError: PropTypes.func\n  }\n\n  static defaultProps = {\n    onViewportChange: () => {},\n    origin: 'https://api.mapbox.com',\n    zoom: 16,\n    placeholder: 'Search',\n    trackProximity: false,\n    collapsed: false,\n    clearAndBlurOnEsc: false,\n    clearOnBlur: false,\n    minLength: 2,\n    limit: 5,\n    reverseGeocode: false,\n    enableEventLogging: true,\n    position: 'top-right',\n    onInit: () => {},\n    onClear: () => {},\n    onLoading: () => {},\n    onResults: () => {},\n    onResult: () => {},\n    onError: () => {}\n  }\n}\n\nexport default Geocoder\n"],"names":["VALID_POSITIONS","Geocoder","geocoder","cachedResult","initializeGeocoder","mapboxMap","_this","getMapboxMap","containerNode","getContainerNode","props","inputValue","render","getItemValue","onInit","position","options","accessToken","mapboxApiAccessToken","origin","zoom","flyTo","placeholder","proximity","trackProximity","collapsed","clearAndBlurOnEsc","clearOnBlur","bbox","types","countries","minLength","limit","language","filter","localGeocoder","reverseGeocode","enableEventLogging","marker","MapboxGeocoder","subscribeEvents","appendChild","onAdd","addControl","find","_position","setInput","place_name","showClearIcon","_clearEl","style","display","mapRef","current","getMap","containerRef","on","handleClear","handleLoading","handleResults","handleResult","handleError","unsubscribeEvents","off","removeGeocoder","removeControl","onClear","event","onLoading","onResults","result","onViewportChange","onResult","center","properties","short_code","longitude","latitude","bboxExceptions","fr","name","us","ru","ca","getContainer","getBoundingClientRect","width","height","fitBounds","bounds","viewport","WebMercatorViewport","e","console","warn","transitionInterpolator","FlyToInterpolator","transitionDuration","_typeahead","selected","onError","componentDidMount","this","componentWillUnmount","componentDidUpdate","getGeocoder","PureComponent","propTypes","PropTypes","object","isRequired","func","string","number","bool","array","oneOf","defaultProps"],"mappings":"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"}